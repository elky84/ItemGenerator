@using Web.Components.Layout
@inject NavigationManager NavigationManager

<Router AppAssembly="typeof(Program).Assembly" OnNavigateAsync="HandleNavigation">
    <Found Context="routeData">
        <CascadingValue Value="routeData">
            <RouteView RouteData="routeData" DefaultLayout="typeof(MainLayout)"/>
        </CascadingValue>
        <FocusOnNavigate RouteData="routeData" Selector="h1"/>
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>권한이 없거나, 존재하지 않는 경로입니다</p>
        </LayoutView>
    </NotFound>
</Router>

<AntContainer/>


@code {
#pragma warning disable CS1998 // Async method lacks 'await' operators and will run synchronously
    private async Task HandleNavigation(NavigationContext args)
#pragma warning restore CS1998 // Async method lacks 'await' operators and will run synchronously
    {
        var currentPath = NavigationManager.Uri.Replace(NavigationManager.BaseUri, "/");
        if (args.Path.StartsWith("/unauthorized") || currentPath.StartsWith("/unauthorized"))
            return;

        var hasAccess = !currentPath.StartsWith("/test");
        if (!hasAccess)
        {
            NavigationManager.NavigateTo("/unauthorized");
        }
    }
}